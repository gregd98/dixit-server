{"version":3,"sources":["utils/communication.js","constants.js","actions/gameActions.js","actions/actionTypes.js","components/error_page.jsx","components/dialog_utils.jsx","components/lobby.jsx","components/form_utils.jsx","constraints/joinConstraints.js","components/join.jsx","components/game.jsx","components/player_list.jsx","components/host.jsx","App.js","reducers/gameReducer.js","reducers/index.js","index.js"],"names":["communication","url","method","body","Promise","resolve","reject","payload","init","credentials","JSON","stringify","fetch","then","result","status","json","succeed","message","inputErrors","catch","error","console","log","restGet","restDelete","restPut","COLORS","loadGameData","gameData","type","loadGameType","gameType","updatePlayers","players","updateState","state","ErrorPage","input","className","ConfirmationDialog","id","text","btnText","btnHandler","errorMessage","isLoading","btnType","data-keyboard","tabIndex","style","fontSize","onClick","disabled","role","aria-hidden","data-bs-dismiss","Lobby","gameInfo","useSelector","game","useState","editions","setEditions","Set","checkedEditions","setCheckedEditions","value","min","max","cardCount","setCardCount","selectEditionText","setSelectEditionText","rounds","turns","gameLength","setGameLength","socket","setSocket","undefined","hoverPlayer","setHoverPlayer","pageDisabled","setPageDisabled","startError","setStartError","pageError","setPageError","setLoading","exitDialog","setExitDialog","dispatch","useDispatch","useEffect","removeModal","window","$","modal","removeClass","onpopstate","so","socketIOClient","location","hostname","disconnect","on","playerCount","length","maxCardCount","reduce","acc","has","cards","minCardCount","current","size","handSize","divider","Math","floor","toggleEdition","edition","tmp","delete","add","exitDialogConfirmed","a","rest","Fragment","map","key","name","onChange","checked","ip","code","event","target","Array","from","Number","parseInt","e","stopPropagation","exitGame","player","i","onMouseEnter","onMouseLeave","isAdmin","playerId","validate","require","classNames","trimDecorator","trim","uppercaseDecorator","toUpperCase","Input","prop","label","setState","decorators","constraint","classes","htmlFor","onBlur","validation","fullMessages","placeholder","step","autoComplete","required","allowEmpty","joinConstraints","presence","format","pattern","minimum","maximum","tooShort","tooLong","flags","Join","setCode","setName","formDisabled","setFormDisabled","formError","setFormError","setterDict","width","onSubmit","preventDefault","evaluateInputErrors","errors","Object","entries","forEach","rules","Game","gameState","selectedIndex","setSelectedIndex","votes","setVotes","scores","setScores","circles","setCircles","voteLoading","setVoteLoading","find","ownCardIndex","v","n","includes","push","isOver","s","score","item","sort","b","total","document","to","unbind","otherPlayers","filter","currentPlayer","color","active","playersVoted","playersVote","vote","done","getPlayerNameById","p","xDown","yDown","handleTouchStart","firstTouch","touches","originalEvent","getTouches","clientX","clientY","handleTouchMove","xUp","yUp","xDiff","yDiff","abs","carousel","isStarted","addEventListener","removeEventListener","setTimeout","pickCard","pickedCard","hand","voteDone","renderVoteCircles","circle","backgroundColor","renderCards","withBtn","header","data-bs-ride","data-bs-interval","data-bs-touch","_","index","data-bs-target","data-bs-slide-to","card","fileName","src","alt","href","data-bs-slide","ownTurn","playersPicked","playersPick","both","voteClicked","isSecondVote","maxWidth","minWidth","lastRound","PlayerList","maxUserCardWidth","setMaxUserCardWidth","setSizes","w","documentElement","clientWidth","innerWidth","height","maxHeight","Host","maxCardHeight","setMaxCardHeight","maxCardWidth","setMaxCardWidth","h","clientHeight","innerHeight","mh","ceil","mw","pick","renderWithNav","content","background","renderTable","table","originalCardId","cardId","cardIndex","App","defaultState","gameReducer","action","produce","draft","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1e4c6a8.chunk.js","sourcesContent":["const communication = (url, method, body) => new Promise(\r\n  (resolve, reject) => {\r\n    const payload = {};\r\n    const init = { method, credentials: 'include' };\r\n    if (body) {\r\n      init.body = JSON.stringify(body);\r\n    }\r\n    fetch(url, init).then((result) => {\r\n      payload.status = result.status;\r\n      return result.json();\r\n    }).then((result) => {\r\n      if (result.succeed) {\r\n        if (method === 'GET' || result.payload) {\r\n          resolve(result.payload);\r\n        } else {\r\n          resolve();\r\n        }\r\n      } else {\r\n        payload.message = result.message;\r\n        if (result.inputErrors) {\r\n          payload.inputErrors =  result.inputErrors;\r\n        }\r\n        reject(payload);\r\n      }\r\n    }).catch((error) => {\r\n      console.log(`Error: ${error.message}`);\r\n      payload.message = 'Failed to connect to the server.';\r\n      reject(payload);\r\n    });\r\n  },\r\n);\r\n\r\nexport const restGet = (url) => new Promise((resolve, reject) => {\r\n  communication(url, 'GET', null).then((result) => resolve(result)).catch((error) => reject(error));\r\n});\r\n\r\nexport const restDelete = (url) => new Promise((resolve, reject) => {\r\n  communication(url, 'DELETE', null).then((result) => resolve(result)).catch((error) => reject(error));\r\n});\r\n\r\nexport const restPut = (url, body) => new Promise((resolve, reject) => {\r\n  communication(url, 'PUT', body).then((result) => resolve(result)).catch((error) => reject(error));\r\n});\r\n\r\nexport const restPost = (url, body) => new Promise((resolve, reject) => {\r\n  communication(url, 'POST', body).then((result) => resolve(result)).catch((error) => reject(error));\r\n});\r\n","// export const SERVER_PATH = 'http://localhost/';\r\nexport const SERVER_PATH = '/';\r\n\r\nexport const COLORS = [\r\n  '#c70039',\r\n  '#511849',\r\n  '#2a7b9b',\r\n  '#57c785',\r\n  '#eddd53',\r\n  '#ff8d1a',\r\n  '#900c3f',\r\n  '#3d3d6b',\r\n  '#00baad',\r\n  '#add45c',\r\n  '#ffc300',\r\n  '#ff5733',\r\n];\r\n","import {\n  actionLoadGameData, actionLoadGameType, actionResetGame, actionUpdatePlayers, actionUpdateState,\n} from './actionTypes';\n\nexport const loadGameData = (gameData) => ({ type: actionLoadGameData, payload: gameData });\nexport const loadGameType = (gameType) => ({ type: actionLoadGameType, payload: gameType });\nexport const updatePlayers = (players) => ({ type: actionUpdatePlayers, payload: players });\nexport const updateState = (state) => ({ type: actionUpdateState, payload: state });\nexport const resetGame = () => ({ type: actionResetGame });\n","export const actionLoadGameData = 'LOAD_GAME_DATA';\r\nexport const actionLoadGameType = 'LOAD_GAME_TYPE';\r\nexport const actionUpdatePlayers = 'UPDATE_PLAYERS';\r\nexport const actionUpdateState = 'UPDATE_STATE';\r\nexport const actionResetGame = 'RESET_GAME';\r\n","import React from 'react';\r\n\r\nconst ErrorPage = (input) => {\r\n  const { status, message } = input;\r\n  return (\r\n    <div className=\"d-flex justify-content-center mt-4\">\r\n      <div>\r\n        <h1 className=\"text-center text-danger display-4\">ERROR{status && ` ${status}`}</h1>\r\n        <h4 className=\"text-center text-danger\">{message}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from 'react';\r\n\r\nexport const ConfirmationDialog = (input) => {\r\n  const {\r\n    id, text, btnText, btnHandler, errorMessage, isLoading,\r\n  } = input;\r\n  let { btnType } = input;\r\n  if (!btnType) {\r\n    btnType = 'primary';\r\n  }\r\n  return (\r\n    <div className=\"modal fade\" id={id} data-keyboard=\"false\" tabIndex=\"-1\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content darkBg\">\r\n          <div className=\"modal-body\">\r\n            <p className=\"text-light text-center\" style={{ fontSize: '1.25rem' }}>{text}</p>\r\n            <div className=\"d-flex justify-content-center mt-4\">\r\n              <button onClick={btnHandler} type=\"button\" className={`btn btn-${btnType}`} disabled={isLoading}>\r\n                {isLoading && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                {btnText}\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-outline-light ml-2\" data-bs-dismiss=\"modal\">Cancel</button>\r\n            </div>\r\n            {errorMessage && <div className=\"alert alert-danger mt-4 mb-0\" role=\"alert\">{errorMessage}</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport socketIOClient from 'socket.io-client';\r\nimport { restDelete, restGet, restPut } from '../utils/communication';\r\nimport { SERVER_PATH } from '../constants';\r\nimport { resetGame, updatePlayers, updateState } from '../actions/gameActions';\r\nimport ErrorPage from './error_page.jsx';\r\nimport {ConfirmationDialog} from './dialog_utils';\r\n\r\nconst Lobby = () => {\r\n  const gameInfo = useSelector((state) => state.game.game);\r\n  const [editions, setEditions] = useState([]);\r\n  const [checkedEditions, setCheckedEditions] = useState(new Set());\r\n  const [cardCount, setCardCount] = useState({ value: 0, min: 0, max: 0 });\r\n  const [selectEditionText, setSelectEditionText] = useState('');\r\n  const [gameLength, setGameLength] = useState({ rounds: 0, turns: 0 });\r\n  const [socket, setSocket] = useState(null);\r\n  const [hoverPlayer, setHoverPlayer] = useState(undefined);\r\n  const [pageDisabled, setPageDisabled] = useState(false);\r\n\r\n  const [startError, setStartError] = useState('');\r\n  const [pageError, setPageError] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const [exitDialog, setExitDialog] = useState({\r\n    text: '',\r\n    btnHandler: () => {},\r\n    isLoading: false,\r\n    errorMessage: '',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const removeModal = () => {\r\n      window.$('#exitDialog').modal('hide');\r\n      window.$('body').removeClass('modal-open');\r\n      // window.$('.modal-backdrop').remove();\r\n    };\r\n    window.onpopstate = removeModal;\r\n    return () => {\r\n      removeModal();\r\n      window.onpopstate = () => {};\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    restGet(`${SERVER_PATH}api/editions`).then((result) => {\r\n      setEditions(result);\r\n      setLoading(false);\r\n    }).catch((error) => {\r\n      setPageError(error);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const so = socketIOClient(`${window.location.hostname}/host`);\r\n    setSocket(so);\r\n    return () => {\r\n      so.disconnect();\r\n      setSocket(null);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('state update', (payload) => {\r\n        dispatch(updateState(payload));\r\n      });\r\n      socket.on('player update', (payload) => {\r\n        dispatch(updatePlayers(payload));\r\n      });\r\n    }\r\n  }, [dispatch, socket]);\r\n\r\n  useEffect(() => {\r\n    const playerCount = gameInfo.players.length;\r\n    const maxCardCount = editions\r\n      .reduce((acc, value) => (checkedEditions.has(value.id) ? acc + value.cards : acc), 0);\r\n    const minCardCount = playerCount !== 3 ? 5 * playerCount + playerCount ** 2 : 31;\r\n    if (playerCount === 0 || maxCardCount === 0 || maxCardCount < minCardCount) {\r\n      setCardCount((current) => ({\r\n        ...current, value: 0, min: 0, max: 0,\r\n      }));\r\n      if (maxCardCount < minCardCount) {\r\n        if (checkedEditions.size === 0) {\r\n          setSelectEditionText('Select editions!');\r\n        } else {\r\n          setSelectEditionText('Not enough cards, select more editions!');\r\n        }\r\n      }\r\n    } else {\r\n      setCardCount((current) => ({\r\n        ...current, value: minCardCount, min: minCardCount, max: maxCardCount,\r\n      }));\r\n      setSelectEditionText('');\r\n    }\r\n  }, [editions, checkedEditions, gameInfo.players.length]);\r\n\r\n  useEffect(() => {\r\n    const cards = cardCount.value;\r\n    const playerCount = gameInfo.players.length;\r\n    const handSize = playerCount === 3 ? 7 : 6;\r\n    const divider = playerCount === 3 ? 5 : playerCount;\r\n    const rounds = Math.floor((cards - playerCount * handSize) / divider + 1);\r\n    setGameLength({ rounds, turns: Math.floor(rounds / playerCount) });\r\n  }, [cardCount.value, gameInfo.players.length]);\r\n\r\n  const toggleEdition = (edition) => {\r\n    const tmp = new Set(checkedEditions);\r\n    const { id } = edition;\r\n    if (tmp.has(id)) {\r\n      tmp.delete(id);\r\n    } else {\r\n      tmp.add(id);\r\n    }\r\n    setCheckedEditions(tmp);\r\n  };\r\n\r\n  const startGame = () => {\r\n    setPageDisabled(true);\r\n    setStartError('');\r\n    restPut(`${SERVER_PATH}api/games/start`, {\r\n      editions: Array.from(checkedEditions),\r\n      cardCount: Number.parseInt(cardCount.value, 10),\r\n    })\r\n      .catch((error) => {\r\n        setPageDisabled(false);\r\n        setStartError(`Error: ${error.message}`);\r\n      });\r\n  };\r\n\r\n  const exitDialogConfirmed = async () => {\r\n    try {\r\n      setPageDisabled(true);\r\n      setExitDialog((rest) => ({ ...rest, isLoading: true }));\r\n      await restDelete(`${SERVER_PATH}api/games`);\r\n      setPageDisabled(false);\r\n      // window.$('#exitDialog').modal('hide');\r\n      dispatch(resetGame());\r\n    } catch (error) {\r\n      setPageDisabled(false);\r\n      setExitDialog((rest) => ({ ...rest, isLoading: false, errorMessage: `Error: ${error.message}` }));\r\n    }\r\n  };\r\n\r\n  const exitGame = (e, playerCount) => {\r\n    if (playerCount > 0) {\r\n      e.stopPropagation();\r\n      setExitDialog({\r\n        text: 'Are you sure you want to exit the lobby?',\r\n        btnHandler: exitDialogConfirmed,\r\n        isLoading: false,\r\n        errorMessage: '',\r\n      });\r\n      window.$('#exitDialog').modal('show');\r\n    } else {\r\n      exitDialogConfirmed();\r\n    }\r\n  };\r\n\r\n  const kickPlayer = (playerId) => {\r\n    restPut(`${SERVER_PATH}api/games/kick`, { playerId }).catch((error) => {\r\n      console.log(`Error: ${error.message}`);\r\n    });\r\n  };\r\n\r\n  const adminPlayer = (playerId) => {\r\n    restPut(`${SERVER_PATH}api/games/admin`, { playerId }).catch((error) => {\r\n      console.log(`Error: ${error.message}`);\r\n    });\r\n  };\r\n\r\n  const playerMouseEnter = (index) => {\r\n    setHoverPlayer(index);\r\n  };\r\n\r\n  const playerMouseLeave = (index) => {\r\n    if (hoverPlayer === index) {\r\n      setHoverPlayer(undefined);\r\n    }\r\n  };\r\n\r\n  const renderInputCardRange = () => {\r\n    const handleInputChange = (event) => {\r\n      const { value } = event.target;\r\n      setCardCount((rest) => ({ ...rest, value }));\r\n    };\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n          onChange={handleInputChange}\r\n          min={cardCount.min}\r\n          max={cardCount.max}\r\n          type=\"range\"\r\n          className=\"form-control-range custom-range\"\r\n          id=\"inputCardCount\"\r\n          value={cardCount.value}\r\n          disabled={pageDisabled}/>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  if (pageError.message) {\r\n    return <ErrorPage status={pageError.status} message={pageError.message} />;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <React.Fragment />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p className=\"text-center text-light dixit-title\">Host</p>\r\n      <div className=\"d-flex justify-content-center mt-4\">\r\n        <div className=\"list-group edition-list shadow mx-4 darkBg\">\r\n          {editions\r\n            .map(\r\n              (edition) => (\r\n                <div onClick={() => toggleEdition(edition)} key={edition.id} className=\"list-group-item d-flex justify-content-between align-items-center clickable darkBg\" >\r\n                  <p className=\"m-0 p-0 text-light edition-text\">{edition.name}</p>\r\n                  <input onChange={() => toggleEdition(edition)} className=\"form-check-input-lg\" type=\"checkbox\"\r\n                         id={`ch-${edition.id}`} checked={checkedEditions.has(edition.id)} disabled={pageDisabled}/>\r\n                </div>\r\n              ),\r\n            )}\r\n        </div>\r\n        <div className=\"mx-4\">\r\n          <p className=\"text-light lobby-text\">URL: <b>{gameInfo.ip ? `http://${gameInfo.ip}/` : 'N/A'}</b></p>\r\n          <p className=\"text-light lobby-text mb-4\">Code: <b className=\"code-spacing\">{gameInfo.code}</b></p>\r\n          {gameInfo.players.length >= 3 ? (\r\n            <React.Fragment>\r\n              {selectEditionText ? (\r\n                  <p className=\"text-light small-text\">{selectEditionText}</p>\r\n              ) : (\r\n                <React.Fragment>\r\n                  {renderInputCardRange()}\r\n                  <p className=\"text-light small-roboto mt-4\">Cards: <b>{cardCount.value}</b></p>\r\n                  <p className=\"text-light small-roboto\">Rounds: <b>{gameLength.rounds}</b></p>\r\n                  <p className=\"text-light small-roboto\">Each player turns: <b>{gameLength.turns}</b></p>\r\n                  <button onClick={startGame} className=\"btn btn-lg btn-block btn-outline-light mt-4\" disabled={pageDisabled}>\r\n                    Start game\r\n                    {pageDisabled && <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                  </button>\r\n                </React.Fragment>\r\n              )}\r\n            </React.Fragment>\r\n          ) : (\r\n            <p className=\"text-light small-text\">Waiting players to join.</p>\r\n          )}\r\n          <button onClick={(e) => exitGame(e, gameInfo.players.length)} className=\"btn btn-lg btn-block btn-outline-danger mt-2\" disabled={pageDisabled}>\r\n            Cancel\r\n            {pageDisabled && <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\" />}\r\n          </button>\r\n          {startError && (<div className=\"alert alert-danger mt-4\" role=\"alert\">{startError}</div>)}\r\n        </div>\r\n        <div className=\"list-group edition-list shadow mx-4 darkBg\">\r\n          {gameInfo.players.map((player, i) => (\r\n            <div key={player.id} onMouseEnter={() => playerMouseEnter(i)} onMouseLeave={() => playerMouseLeave(i)} className=\"list-group-item d-flex justify-content-between align-items-center darkBg\" >\r\n              <div className=\"d-flex flex-row\">\r\n                <p className=\"m-0 p-0 text-light edition-text\">{player.name}</p>\r\n                {player.isAdmin && <span className=\"badge bg-light rounded-pill text-dark ml-2 align-self-baseline\" style={{ fontSize: '3mm' }}>admin</span>}\r\n              </div>\r\n              {hoverPlayer === i && (\r\n                <div>\r\n                  <button onClick={() => adminPlayer(player.id)} className=\"btn btn-sm btn-outline-secondary mr-2\"\r\n                          type=\"button\" disabled={pageDisabled}>A</button>\r\n                  <button onClick={() => kickPlayer(player.id)} className=\"btn btn-sm btn-outline-danger\"\r\n                          type=\"button\" disabled={pageDisabled}>X</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <ConfirmationDialog id=\"exitDialog\"\r\n                          text={exitDialog.text}\r\n                          btnText=\"Exit\"\r\n                          btnType=\"danger\"\r\n                          btnHandler={exitDialog.btnHandler}\r\n                          isLoading={exitDialog.isLoading}\r\n                          errorMessage={exitDialog.errorMessage}/>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Lobby;\r\n","import React from 'react';\r\n\r\nconst validate = require('validate.js');\r\nconst classNames = require('classnames');\r\n\r\nexport const trimDecorator = (value) => value.trim();\r\nexport const uppercaseDecorator = (value) => value.toUpperCase();\r\nexport const roundDecorator = (value) => {\r\n  const f = parseFloat(value);\r\n  return !Number.isNaN(f) ? Math.round(f * 10) / 10 : value;\r\n};\r\n\r\nexport const Input = (prop) => {\r\n  const {\r\n    type, id, label, state, setState, decorators, constraint, disabled,\r\n  } = prop;\r\n\r\n  const handleInputChange = (event) => {\r\n    const { value } = event.target;\r\n    setState((rest) => ({ ...rest, value, error: '' }));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    let { value } = state;\r\n    if (decorators) {\r\n      for (let i = 0; i < decorators.length; i += 1) {\r\n        value = decorators[i](value);\r\n      }\r\n      setState((rest) => ({ ...rest, value }));\r\n    }\r\n    if (constraint !== undefined) {\r\n      const validation = validate({ value }, constraint, { fullMessages: false });\r\n      if (validation) {\r\n        setState((rest) => ({ ...rest, error: validation.value[0] }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const classes = classNames({\r\n    'form-control': true,\r\n    'is-invalid': state.error,\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <label htmlFor={id} className=\"text-light\">{label}</label>\r\n      <input onChange={handleInputChange} onBlur={handleBlur} type={type}\r\n             className={classes} id={id} placeholder={label}\r\n             value={state.value} disabled={disabled} step=\"any\" autoComplete=\"off\"/>\r\n      {!disabled && state.error && <div className=\"invalid-feedback\">{state.error}</div>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","const required = { allowEmpty: false, message: 'This field is required.' };\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const joinConstraints = {\r\n  code: {\r\n    presence: required,\r\n    format: {\r\n      pattern: '[A-Z]{6}',\r\n      message: 'Invalid code',\r\n    },\r\n  },\r\n  name: {\r\n    presence: required,\r\n    length: {\r\n      minimum: 3,\r\n      maximum: 16,\r\n      tooShort: 'The name must be between 3 and 16 characters.',\r\n      tooLong: 'The name must be between 3 and 16 characters.',\r\n    },\r\n    format: {\r\n      pattern: '\\\\p{L}+',\r\n      flags: 'u',\r\n      message: 'The name must only contain alphabetical characters.',\r\n    },\r\n  },\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Input, trimDecorator, uppercaseDecorator } from './form_utils.jsx';\r\nimport { joinConstraints as rules } from '../constraints/joinConstraints';\r\nimport { loadGameData, loadGameType } from '../actions/gameActions';\r\nimport { restPut } from '../utils/communication';\r\nimport { SERVER_PATH } from '../constants';\r\n\r\nconst validate = require('validate.js');\r\n\r\nconst Join = () => {\r\n  const [code, setCode] = useState({ value: '', error: '' });\r\n  const [name, setName] = useState({ value: '', error: '' });\r\n  const [formDisabled, setFormDisabled] = useState(false);\r\n  const [formError, setFormError] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setterDict = { code: setCode, name: setName };\r\n\r\n  const submitForm = (event) => {\r\n    event.preventDefault();\r\n    setFormError('');\r\n    const evaluateInputErrors = (errors) => {\r\n      Object.entries(errors).forEach(([key, value]) => {\r\n        setterDict[key]((rest) => ({ ...rest, error: value[0] }));\r\n      });\r\n    };\r\n\r\n    const body = {\r\n      code: code.value,\r\n      name: name.value,\r\n    };\r\n\r\n    const validation = validate(body, rules, { fullMessages: false });\r\n\r\n    if (validation) {\r\n      evaluateInputErrors(validation);\r\n    } else {\r\n      setFormDisabled(true);\r\n      restPut(`${SERVER_PATH}api/player`, body).then((result) => {\r\n        dispatch(loadGameData(result));\r\n      }).catch((error) => {\r\n        setFormDisabled(false);\r\n        if (error.inputErrors) {\r\n          evaluateInputErrors(error.inputErrors);\r\n        } else {\r\n          setFormError(error.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const backClicked = () => {\r\n    dispatch(loadGameType(''));\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center mb-4 mx-4\">\r\n      <div style={{ width: 500 }}>\r\n        <p className=\"text-center text-light dixit-title\">Join</p>\r\n        <form onSubmit={submitForm} className=\"mt-5\">\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-6\">\r\n              <Input type=\"text\"\r\n                     id=\"inputCode\"\r\n                     label=\"Code\"\r\n                     state={code}\r\n                     setState={setCode}\r\n                     constraint={{ value: rules.code }}\r\n                     decorators={[trimDecorator, uppercaseDecorator]}\r\n                     disabled={formDisabled} />\r\n            </div>\r\n            <div className=\"form-group col-md-6\">\r\n              <Input type=\"text\"\r\n                     id=\"inputName\"\r\n                     label=\"Nickname\"\r\n                     state={name}\r\n                     setState={setName}\r\n                     constraint={{ value: rules.name }}\r\n                     decorators={[trimDecorator]}\r\n                     disabled={formDisabled} />\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center mt-5\">\r\n            <div>\r\n              <button type=\"submit\" className=\"btn btn-lg btn-outline-light mr-1\" disabled={formDisabled}>\r\n                {formDisabled && <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" />}\r\n                Join game\r\n              </button>\r\n              <button onClick={backClicked} type=\"button\" className=\"btn btn-lg btn-outline-danger ml-1\" disabled={formDisabled}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        {formError && <div className=\"alert alert-danger mt-5\" role=\"alert\">{formError}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","import React, { useState, useEffect } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { resetGame, updatePlayers, updateState } from '../actions/gameActions';\r\nimport { COLORS, SERVER_PATH } from '../constants';\r\nimport { restDelete, restPut } from '../utils/communication';\r\n\r\nconst Game = () => {\r\n  const gameInfo = useSelector((state) => state.game.game);\r\n  const gameState = useSelector((state) => state.game.state);\r\n  const [socket, setSocket] = useState(null);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [votes, setVotes] = useState([]);\r\n  const [scores, setScores] = useState([]);\r\n  const [circles, setCircles] = useState([]);\r\n  const [voteLoading, setVoteLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const [pageDisabled, setPageDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const so = socketIOClient(`${window.location.hostname}/player`);\r\n    setSocket(so);\r\n    return () => {\r\n      so.disconnect();\r\n      setSocket(null);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('state update', (payload) => {\r\n        dispatch(updateState(payload));\r\n      });\r\n      socket.on('player update', (payload) => {\r\n        dispatch(updatePlayers(payload));\r\n      });\r\n      socket.on('game deleted', () => {\r\n        dispatch(resetGame());\r\n      });\r\n    }\r\n  }, [dispatch, socket]);\r\n\r\n  useEffect(() => {\r\n    if (!gameInfo.players.find((player) => player.id === gameInfo.playerId)) {\r\n      dispatch(resetGame());\r\n    }\r\n  }, [gameInfo.players, gameInfo.playerId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (gameState && gameState.state === 2 && gameState.ownCardIndex) {\r\n      const v = [];\r\n      const n = gameInfo.players.length !== 3 ? gameInfo.players.length : 5;\r\n      for (let i = 1; i <= n; i += 1) {\r\n        if (gameInfo.players.length === 3 || gameInfo.players.length >= 7) {\r\n          if (!gameState.ownCardIndex.includes(i)) {\r\n            v.push(i);\r\n          }\r\n        } else if (i !== gameState.ownCardIndex) {\r\n          v.push(i);\r\n        }\r\n      }\r\n      setVotes(v);\r\n    }\r\n  }, [gameInfo.players.length, gameState]);\r\n\r\n  useEffect(() => {\r\n    if (gameState && (gameState.state === 3 || gameState.isOver)) {\r\n      const s = [];\r\n      for (let i = 0; i < gameInfo.players.length; i += 1) {\r\n        const player = gameInfo.players[i];\r\n        s.push({\r\n          name: player.name,\r\n          score: gameState.scores.find((item) => item.playerId === player.id).score,\r\n        });\r\n      }\r\n      setScores(s.sort((a, b) => {\r\n        if (a.score.total > b.score.total) {\r\n          return -1;\r\n        }\r\n        if (a.score.total < b.score.total) {\r\n          return 1;\r\n        }\r\n        if (a.name < b.name) {\r\n          return -1;\r\n        }\r\n        return 1;\r\n      }));\r\n    }\r\n  }, [gameInfo.players, gameState]);\r\n\r\n  useEffect(() => {\r\n    window.$(document).on('slid.bs.carousel', '#carouselExampleIndicators', (e) => {\r\n      setSelectedIndex(e.to);\r\n    });\r\n    return () => {\r\n      window.$('#carouselExampleIndicators').unbind();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const otherPlayers = gameInfo.players\r\n      .filter((player) => player.id !== gameState.currentPlayer);\r\n    switch (gameState.state) {\r\n      case 2:\r\n        setCircles(otherPlayers.map((player) => ({\r\n          color: player.color,\r\n          active: (() => {\r\n            if (gameInfo.players.length < 7) {\r\n              return gameState.playersVoted.includes(player.id);\r\n            }\r\n            const playersVote = gameState.playersVoted.find((vote) => vote.playerId === player.id);\r\n            return !!(playersVote && playersVote.done);\r\n          })(),\r\n        })));\r\n        break;\r\n      default: break;\r\n    }\r\n  }, [gameInfo.players, gameState]);\r\n\r\n  const getPlayerNameById = (playerId) => {\r\n    const p = gameInfo.players.find((player) => player.id === playerId);\r\n    if (p) {\r\n      return p.name;\r\n    }\r\n    return 'God';\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (gameState.state === 0) {\r\n      setSelectedIndex(0);\r\n    }\r\n  }, [gameState.state]);\r\n\r\n  useEffect(() => {\r\n    let xDown = null;\r\n    let yDown = null;\r\n    const getTouches = (e) => e.touches || e.originalEvent.touches;\r\n\r\n    const handleTouchStart = (e) => {\r\n      const firstTouch = getTouches(e)[0];\r\n      xDown = firstTouch.clientX;\r\n      yDown = firstTouch.clientY;\r\n    };\r\n\r\n    const handleTouchMove = (e) => {\r\n      if (xDown && yDown) {\r\n        const xUp = e.touches[0].clientX;\r\n        const yUp = e.touches[0].clientY;\r\n        const xDiff = xDown - xUp;\r\n        const yDiff = yDown - yUp;\r\n        if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n          if (xDiff > 0) {\r\n            window.$('#carouselExampleIndicators').carousel('next');\r\n          } else {\r\n            window.$('#carouselExampleIndicators').carousel('prev');\r\n          }\r\n        }\r\n        xDown = null;\r\n        yDown = null;\r\n      }\r\n    };\r\n    if (gameState.isStarted) {\r\n      document.addEventListener('touchstart', handleTouchStart, false);\r\n      document.addEventListener('touchmove', handleTouchMove, false);\r\n    }\r\n    return () => {\r\n      document.removeEventListener('touchstart', handleTouchStart, false);\r\n      document.removeEventListener('touchmove', handleTouchMove, false);\r\n    };\r\n  }, [gameState.isStarted]);\r\n\r\n  useEffect(() => {\r\n    if (gameState.state === 2) {\r\n      setVoteLoading(true);\r\n      setTimeout(() => {\r\n        setVoteLoading(false);\r\n      }, 2000);\r\n    }\r\n  }, [gameState.state]);\r\n\r\n  const pickCard = () => {\r\n    setPageDisabled(true);\r\n    restPut(`${SERVER_PATH}api/games/pick`, { pickedCard: gameState.hand[selectedIndex].id }).then((payload) => {\r\n      dispatch(updateState(payload));\r\n      setPageDisabled(false);\r\n    }).catch((error) => {\r\n      setPageDisabled(false);\r\n      console.log(`Error: ${error.message}`);\r\n    });\r\n  };\r\n\r\n  const voteClicked = (vote) => {\r\n    setPageDisabled(true);\r\n    restPut(`${SERVER_PATH}api/games/vote`, { vote }).then((payload) => {\r\n      dispatch(updateState(payload));\r\n      setPageDisabled(false);\r\n    }).catch((error) => {\r\n      setPageDisabled(false);\r\n      console.log(`Error: ${error.message}`);\r\n    });\r\n  };\r\n\r\n  const voteDone = () => {\r\n    setPageDisabled(true);\r\n    restPut(`${SERVER_PATH}api/games/vote`, { vote: 'done' }).then((payload) => {\r\n      dispatch(updateState(payload));\r\n      setPageDisabled(false);\r\n    }).catch((error) => {\r\n      setPageDisabled(false);\r\n      console.log(`Error: ${error.message}`);\r\n    });\r\n  };\r\n\r\n  const nextClicked = () => {\r\n    setPageDisabled(true);\r\n    restPut(`${SERVER_PATH}api/games/next`, {}).then((payload) => {\r\n      dispatch(updateState(payload));\r\n      setPageDisabled(false);\r\n    }).catch((error) => {\r\n      setPageDisabled(false);\r\n      console.log(`Error: ${error.message}`);\r\n    });\r\n  };\r\n\r\n  const exitGame = () => {\r\n    restPut(`${SERVER_PATH}api/games/kick`, {}).catch((error) => {\r\n      console.log(`Error: ${error.message}`);\r\n    });\r\n  };\r\n\r\n  const returnToLobby = () => {\r\n    restPut(`${SERVER_PATH}api/games/reset`, {}).then((payload) => {\r\n      dispatch(updateState(payload));\r\n    }).catch((error) => {\r\n      console.log(`Error: ${error.message}`);\r\n    });\r\n  };\r\n\r\n  const terminateGame = () => {\r\n    restDelete(`${SERVER_PATH}api/games`).then(() => {\r\n      dispatch(resetGame());\r\n    }).catch((error) => {\r\n      console.log(`Error: ${error.message}`);\r\n    });\r\n  };\r\n\r\n  const isSecondVote = () => {\r\n    if (gameState.state === 2) {\r\n      if (gameInfo.players.length >= 7) {\r\n        const playersVote = gameState.playersVoted\r\n          .find((vote) => vote.playerId === gameInfo.playerId);\r\n        return playersVote && !playersVote.done;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const renderVoteCircles = () => (\r\n      <React.Fragment>\r\n        <p className=\"text-light text-center small-text p-0 my-2\">Other players voting.</p>\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          {circles.map((circle, i) => (\r\n            <div key={i} className={`vote-circle-lg m-1 moving-circle rounded-circle mx-2 shadow${circle.active ? ' move-circle' : ''}`} style={{ backgroundColor: COLORS[circle.color] }}/>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n\r\n  const renderVotes = () => (\r\n    <React.Fragment>\r\n      <p className=\"text-light text-center small-text p-0 mt-2\">Voting</p>\r\n      <div className=\"d-grid gap-2 mx-2 mt-2\">\r\n        {votes.map((vote) => (\r\n          <button key={vote} onClick={() => voteClicked(vote)} className=\"btn btn-lg btn-outline-light btn-block\" type=\"button\" disabled={pageDisabled}>{vote}</button>\r\n        ))}\r\n        {isSecondVote() && (\r\n          <button onClick={voteDone} className=\"btn btn-lg btn-outline-light btn-block mt-4\" disabled={pageDisabled}>Done</button>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const renderVoteLoading = () => (\r\n    <React.Fragment>\r\n      <p className=\"text-light text-center small-text p-0 mt-2\">Voting</p>\r\n      <div className=\"d-flex justify-content-center mt-4\">\r\n        <div className=\"spinner-grow text-light vote-loading\" role=\"status\" />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const renderCardIndicator = (index) => (\r\n      <React.Fragment key={index}>\r\n        {index === selectedIndex ? (\r\n          <li data-bs-target=\"#carouselExampleIndicators\" className=\"active\" data-bs-slide-to={index} />\r\n        ) : (\r\n          <li data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to={index} />\r\n        )}\r\n      </React.Fragment>\r\n  );\r\n\r\n  const renderCardImage = (fileName, index) => (\r\n    <div className={`carousel-item${index === selectedIndex ? ' active' : ''}`} key={index}>\r\n      <img src={`${SERVER_PATH}cards/${fileName}`} className=\"d-block w-100\" alt={fileName} />\r\n    </div>\r\n  );\r\n\r\n  const renderCards = (withBtn, header) => (\r\n      <React.Fragment>\r\n        <p className=\"text-light text-center small-text p-0 my-2\">{header}</p>\r\n        <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-bs-ride=\"carousel\" data-bs-interval={false} data-bs-touch={false}>\r\n          <ol className=\"carousel-indicators\">\r\n            {gameState.hand.map((_, i) => renderCardIndicator(i))}\r\n          </ol>\r\n          <div className=\"carousel-inner\">\r\n            {gameState.hand.map((card, i) => renderCardImage(card.fileName, i))}\r\n          </div>\r\n          <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-bs-slide=\"prev\">\r\n            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"/><span className=\"sr-only\">Previous</span>\r\n          </a>\r\n          <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-bs-slide=\"next\">\r\n            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"/><span className=\"sr-only\">Next</span>\r\n          </a>\r\n          {withBtn && <button id=\"btn_pick\" className=\"pick\" onClick={pickCard} disabled={pageDisabled}>Pick this card</button>}\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n\r\n  if (gameState.isStarted && !gameState.isOver) {\r\n    const ownTurn = gameInfo.playerId === gameState.currentPlayer;\r\n    switch (gameState.state) {\r\n      case 0:\r\n        if (ownTurn) {\r\n          return renderCards(true, 'Your turn!');\r\n        }\r\n        return renderCards(false, `Waiting for ${getPlayerNameById(gameState.currentPlayer)}.`);\r\n      case 1:\r\n        if (ownTurn) {\r\n          return renderCards(false, 'Waiting for other players.');\r\n        }\r\n        if (gameInfo.players.length !== 3) {\r\n          if (gameState.playersPicked.includes(gameInfo.playerId)) {\r\n            return renderCards(false, 'Waiting for other players.');\r\n          }\r\n        } else {\r\n          const playersPick = gameState.playersPicked\r\n            .find((item) => item.playerId === gameInfo.playerId);\r\n          if (playersPick) {\r\n            if (playersPick.both) {\r\n              return renderCards(false, 'Waiting for other players.');\r\n            }\r\n            return renderCards(true, `Pick another card to ${getPlayerNameById(gameState.currentPlayer)}'s sentence.`);\r\n          }\r\n        }\r\n        return renderCards(true, `Pick a card to ${getPlayerNameById(gameState.currentPlayer)}'s sentence.`);\r\n      case 2:\r\n        if (!ownTurn && voteLoading) {\r\n          return renderVoteLoading();\r\n        }\r\n        if (gameInfo.players.length >= 7) {\r\n          const playersVote = gameState.playersVoted\r\n            .find((vote) => vote.playerId === gameInfo.playerId);\r\n          if (ownTurn || (playersVote && playersVote.done)) {\r\n            return renderVoteCircles();\r\n          }\r\n        } else if (ownTurn || gameState.playersVoted.includes(gameInfo.playerId)) {\r\n          return renderVoteCircles();\r\n        }\r\n        return renderVotes();\r\n      case 3:\r\n        return (\r\n          <React.Fragment>\r\n            {gameInfo.players\r\n              .find((player) => player.id === gameInfo.playerId && player.isAdmin) && (\r\n                <div className=\"mx-2 mt-4\">\r\n                  <button className=\"btn btn-block btn-lg btn-outline-light\" onClick={nextClicked} disabled={pageDisabled}>\r\n                    Next\r\n                  </button>\r\n                </div>\r\n            )}\r\n            <div className=\"d-flex justify-content-center my-4\">\r\n            <div className=\"card darkBg mx-4 shadow\" style={{ width: '280px', maxWidth: '280px', minWidth: '280px' }}>\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex justify-content-center mb-4 mt-2\">\r\n                  <img src={`${SERVER_PATH}coup.png`} alt=\"coup\" style={{ maxWidth: '80px' }} />\r\n                </div>\r\n                {scores.map((score) => (\r\n                  <div key={score.name} className=\"d-flex flex-row p-0 m-0 mr-2\">\r\n                    <div className=\"col-7 p-0 m-0\">\r\n                      <p className=\"text-light score-text nowrap\" >{score.name}</p>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start col-5 p-0 m-0 ml-2\">\r\n                      <p className=\"text-light score-text\"><b>{score.score.total}</b></p>\r\n                      {score.score.lastRound > 0 && (\r\n                        <p className=\"text-light score-small-text ml-2\">+{score.score.lastRound}</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        return <h1>Error</h1>;\r\n    }\r\n  }\r\n  if (gameState.isOver) {\r\n    return (\r\n      <React.Fragment>\r\n        <p className=\"text-light text-center small-text p-0 mt-2\">Game Over</p>\r\n        <div className=\"d-flex justify-content-center my-4\">\r\n          <div className=\"card darkBg mx-4 shadow\" style={{ width: '280px', maxWidth: '280px', minWidth: '280px' }}>\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex justify-content-center mb-4 mt-2\">\r\n                <img src={`${SERVER_PATH}coup.png`} alt=\"coup\" style={{ maxWidth: '80px' }} />\r\n              </div>\r\n              {scores.map((score) => (\r\n                <div key={score.name} className=\"d-flex flex-row p-0 m-0 mr-2\">\r\n                  <div className=\"col-10 p-0 m-0\">\r\n                    <p className=\"text-light score-text nowrap\" >{score.name}</p>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-start col-2 p-0 m-0 ml-2\">\r\n                    <p className=\"text-light score-text\"><b>{score.score.total}</b></p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {gameInfo.players\r\n          .find((player) => player.id === gameInfo.playerId && player.isAdmin) && (\r\n          <div className=\"mx-2 mt-4\">\r\n            <button className=\"btn btn-block btn-lg btn-outline-light\" onClick={returnToLobby} disabled={pageDisabled}>\r\n              Return to lobby\r\n            </button>\r\n            <button className=\"btn btn-block btn-lg btn-outline-danger\" onClick={terminateGame} disabled={pageDisabled}>\r\n              Exit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p className=\"text-light text-center medium-text p-0 mt-4\">Waiting to start</p>\r\n      <div className=\"d-flex justify-content-center mt-4\">\r\n        <button onClick={exitGame} className=\"btn btn-lg btn-outline-danger\">Exit</button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n\r\n// TODO a cancelhez es x-hez megerosito dialog\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { COLORS } from '../constants';\r\n\r\nconst PlayerList = () => {\r\n  const gameInfo = useSelector((state) => state.game.game);\r\n  const gameState = useSelector((state) => state.game.state);\r\n  const [maxUserCardWidth, setMaxUserCardWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const setSizes = () => {\r\n      const n = gameInfo.players.length;\r\n      if (n > 0) {\r\n        const w = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\r\n        setMaxUserCardWidth((w - n * 16) / n);\r\n      }\r\n    };\r\n    setSizes();\r\n    window.addEventListener('resize', setSizes);\r\n    return () => {\r\n      window.removeEventListener('resize', setSizes);\r\n    };\r\n  }, [gameInfo.players.length]);\r\n\r\n  return (\r\n    <div style={{ height: '60px', maxHeight: '60px' }} className=\"d-flex justify-content-center flex-wrap\">\r\n      {gameInfo.players.map((player) => (\r\n        <div key={player.id} className={`d-flex flex-row my-2 mx-1 px-1 card shadow darkBg${player.id === gameState.currentPlayer ? ' border-warning' : ''}`} style={{ maxWidth: `${maxUserCardWidth}px` }}>\r\n          <div className=\"vote-circle-lg m-1 rounded-circle my-auto\" style={{ backgroundColor: COLORS[player.color] }}/>\r\n          <p className=\"text-light my-auto mx-1 user-name nowrap\">{player.name}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport socketIOClient from 'socket.io-client';\r\nimport {\r\n  loadGameData, resetGame, updatePlayers, updateState,\r\n} from '../actions/gameActions';\r\nimport PlayerList from './player_list.jsx';\r\nimport { ConfirmationDialog } from './dialog_utils.jsx';\r\nimport { COLORS, SERVER_PATH } from '../constants';\r\nimport { restDelete, restGet } from '../utils/communication';\r\nimport * as Constants from '../constants';\r\n\r\nconst Host = () => {\r\n  const gameInfo = useSelector((state) => state.game.game);\r\n  const gameState = useSelector((state) => state.game.state);\r\n  const [socket, setSocket] = useState(null);\r\n  const [scores, setScores] = useState([]);\r\n  const [maxCardHeight, setMaxCardHeight] = useState(0);\r\n  const [maxCardWidth, setMaxCardWidth] = useState(0);\r\n  const [circles, setCircles] = useState([]);\r\n  const [exitDialog, setExitDialog] = useState({\r\n    text: '',\r\n    btnHandler: () => {},\r\n    isLoading: false,\r\n    errorMessage: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const removeModal = () => {\r\n      window.$('#exitDialog').modal('hide');\r\n      window.$('body').removeClass('modal-open');\r\n      // window.$('.modal-backdrop').remove();\r\n    };\r\n    window.onpopstate = removeModal;\r\n    return () => {\r\n      removeModal();\r\n      window.onpopstate = () => {};\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    restGet(`${Constants.SERVER_PATH}api/games`).then((result) => {\r\n      if (result.game) {\r\n        dispatch(loadGameData(result));\r\n      }\r\n    }).catch((error) => {\r\n      console.log(`Error: ${error.message}`);\r\n    });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const so = socketIOClient(`${window.location.hostname}/host`);\r\n    setSocket(so);\r\n    return () => {\r\n      so.disconnect();\r\n      setSocket(null);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('state update', (payload) => {\r\n        dispatch(updateState(payload));\r\n      });\r\n      socket.on('player update', (payload) => {\r\n        dispatch(updatePlayers(payload));\r\n      });\r\n      socket.on('game deleted', () => {\r\n        dispatch(resetGame());\r\n      });\r\n    }\r\n  }, [dispatch, socket]);\r\n\r\n  useEffect(() => {\r\n    if (gameState) {\r\n      const s = [];\r\n      for (let i = 0; i < gameInfo.players.length; i += 1) {\r\n        const player = gameInfo.players[i];\r\n        s.push({\r\n          name: player.name,\r\n          score: gameState.scores.find((item) => item.playerId === player.id).score,\r\n        });\r\n      }\r\n      setScores(s.sort((a, b) => {\r\n        if (a.score.total > b.score.total) {\r\n          return -1;\r\n        }\r\n        if (a.score.total < b.score.total) {\r\n          return 1;\r\n        }\r\n        if (a.name < b.name) {\r\n          return -1;\r\n        }\r\n        return 1;\r\n      }));\r\n    }\r\n  }, [gameInfo.players, gameState]);\r\n\r\n  useEffect(() => {\r\n    const setSizes = () => {\r\n      const n = gameInfo.players.length !== 3 ? gameInfo.players.length : 5;\r\n      if (n > 0) {\r\n        const h = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\r\n        const w = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\r\n        let mh = Math.ceil(h - 16 - 60);\r\n        let mw = Math.ceil((w - n * 16) / n);\r\n        if (mw < 250) {\r\n          mw = Math.ceil(((w - n * 8) / (n + (n % 2 === 0 ? 0 : 1))) * 2);\r\n          mh = Math.ceil((h - 16 - 60) * 0.5);\r\n        }\r\n        setMaxCardWidth(mw);\r\n        setMaxCardHeight(mh);\r\n      }\r\n    };\r\n    setSizes();\r\n    window.addEventListener('resize', setSizes);\r\n    return () => {\r\n      window.removeEventListener('resize', setSizes);\r\n    };\r\n  }, [gameInfo.players.length]);\r\n\r\n  useEffect(() => {\r\n    const otherPlayers = gameInfo.players\r\n      .filter((player) => player.id !== gameState.currentPlayer);\r\n    switch (gameState.state) {\r\n      case 0:\r\n        setCircles([{\r\n          color: gameInfo.players.find((player) => player.id === gameState.currentPlayer).color,\r\n          active: false,\r\n        }]);\r\n        break;\r\n      case 1:\r\n        if (gameInfo.players.length !== 3) {\r\n          setCircles(otherPlayers.map((player) => ({\r\n            color: player.color,\r\n            active: gameState.playersPicked.includes(player.id),\r\n          })));\r\n        } else {\r\n          setCircles(otherPlayers.reduce((acc, player) => {\r\n            const { color } = player;\r\n            const pick = gameState.playersPicked.find((item) => item.playerId === player.id);\r\n            acc.push({\r\n              color, active: !!pick,\r\n            }, {\r\n              color, active: !!pick && pick.both,\r\n            });\r\n            return acc;\r\n          }, []));\r\n        }\r\n        break;\r\n      default: break;\r\n    }\r\n  }, [gameInfo.players, gameState]);\r\n\r\n  const exitDialogConfirmed = async () => {\r\n    try {\r\n      setExitDialog((rest) => ({ ...rest, isLoading: true }));\r\n      await restDelete(`${SERVER_PATH}api/games`);\r\n      // window.$('#exitDialog').modal('hide');\r\n      dispatch(resetGame());\r\n    } catch (error) {\r\n      setExitDialog((rest) => ({ ...rest, isLoading: false, errorMessage: `Error: ${error.message}` }));\r\n    }\r\n  };\r\n\r\n  const exitGame = (e) => {\r\n    e.stopPropagation();\r\n    setExitDialog({\r\n      text: 'Are you sure you want to exit the game?',\r\n      btnHandler: exitDialogConfirmed,\r\n      isLoading: false,\r\n      errorMessage: '',\r\n    });\r\n    window.$('#exitDialog').modal('show');\r\n  };\r\n\r\n  const renderWithNav = (content) => (\r\n      <React.Fragment>\r\n        <nav className=\"navbar navbar-light fixed-top mt-2 p-0 mr-2\" style={{ background: 'transparent' }}>\r\n          <span />\r\n          <span onClick={exitGame} className=\"material-icons text-danger exit-icon clickable float-right p-0 mr-2 mt-2\">close</span>\r\n        </nav>\r\n        {content}\r\n        <ConfirmationDialog id=\"exitDialog\"\r\n                            text={exitDialog.text}\r\n                            btnText=\"Exit\"\r\n                            btnType=\"danger\"\r\n                            btnHandler={exitDialog.btnHandler}\r\n                            isLoading={exitDialog.isLoading}\r\n                            errorMessage={exitDialog.errorMessage}/>\r\n      </React.Fragment>\r\n  );\r\n\r\n  const getPlayerNameById = (playerId) => {\r\n    const p = gameInfo.players.find((player) => player.id === playerId);\r\n    if (p) {\r\n      return p.name;\r\n    }\r\n    return 'God';\r\n  };\r\n\r\n  const renderVoteCircles = (cardIndex) => {\r\n    let v;\r\n    if (gameInfo.players.length < 7) {\r\n      v = gameState.votes.filter((vote) => vote.vote === cardIndex);\r\n    } else {\r\n      v = gameState.votes.filter((vote) => vote.votes.includes(cardIndex));\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {v.length > 0 && (\r\n          <div id=\"btn_pick\" className=\"bottom-votes d-flex flex-wrap m-0 px-2 py-2\">\r\n            {v.map((vote) => gameInfo.players.find((player) => player.id === vote.playerId).color)\r\n              .map((color) => (\r\n                <div key={color} className=\"vote-circle m-1 rounded-circle\" style={{ backgroundColor: COLORS[color] }}/>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getPlayerNameByCardId = (cardId) => {\r\n    if (cardId === gameState.originalCardId) {\r\n      return gameInfo.players.find((player) => player.id === gameState.currentPlayer).name;\r\n    }\r\n    if (gameInfo.players.length !== 3) {\r\n      return gameInfo.players.find((player) => player.id === gameState.playersPicked\r\n        .find((item) => cardId === item.card.id).playerId).name;\r\n    }\r\n    return gameInfo.players.find((player) => player.id === gameState.playersPicked\r\n      .find((item) => !!item.cards.find((card) => card.id === cardId)).playerId).name;\r\n  };\r\n\r\n  const renderTable = () => (\r\n    <React.Fragment>\r\n      <PlayerList />\r\n      <div className=\"d-flex justify-content-center flex-wrap m-0\">\r\n        {gameState.table.map((card, i) => (\r\n          <div key={card.id} className=\"card m-1 p-0 shadow rounded-lg darkBg border-0\">\r\n            <img src={`${SERVER_PATH}cards/${card.fileName}`} className=\"card-img-top table-card rounded-lg\" alt=\"faszom\"\r\n                 style={{ maxHeight: `${maxCardHeight}px`, maxWidth: `${maxCardWidth}px` }}/>\r\n            <p id=\"btn_pick\" className={`pick vote-num${gameState.state === 3 ? ' vote-num-left' : ''}`}>{i + 1}</p>\r\n            {gameState.state === 3 && (\r\n              <React.Fragment>\r\n                <p id=\"btn_pick\" className={`pick vote-name${card.id === gameState.originalCardId ? ' vote-name-original' : ''}`}>\r\n                  {getPlayerNameByCardId(card.id)}\r\n                </p>\r\n                {renderVoteCircles(i + 1)}\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  if (gameState.isOver) {\r\n    return renderWithNav((\r\n      <div className=\"d-flex justify-content-center mt-4\">\r\n        <div>\r\n          <p className=\"text-light big-text text-center\">Game Over</p>\r\n          <div className=\"card darkBg mx-4 shadow mt-4\" style={{ width: '280px', maxWidth: '280px', minWidth: '280px' }}>\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex justify-content-center mb-4 mt-2\">\r\n                <img className=\"coup-image\" src={`${SERVER_PATH}coup.png`} alt=\"coup\" />\r\n              </div>\r\n              {scores.map((score) => (\r\n                <div key={score.name} className=\"d-flex flex-row p-0 m-0 mr-2\">\r\n                  <div className=\"col-10 p-0 m-0\">\r\n                    <p key={score.name} className=\"text-light score-text nowrap\" >{score.name}</p>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-start col-2 p-0 m-0 ml-2\">\r\n                    <p key={score.name} className=\"text-light score-text\"><b>{score.score.total}</b></p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n  switch (gameState.state) {\r\n    case 0:\r\n    case 1:\r\n      return renderWithNav((\r\n        <React.Fragment>\r\n          <PlayerList className=\"mb-3\"/>\r\n          <div className=\"d-flex justify-content-around mt-5\">\r\n            <div className=\"mx-4\">\r\n              {gameState.state < 2 && (\r\n                <React.Fragment>\r\n                  {gameState.state === 0 ? (\r\n                    <p className=\"text-light big-text\">{'Waiting for '}<b>{getPlayerNameById(gameState.currentPlayer)}</b>{', to pick a card.'}</p>\r\n                  ) : (\r\n                    <p className=\"text-light big-text\">Pick a card to <b>{getPlayerNameById(gameState.currentPlayer)}</b>{'\\'s sentence'}</p>\r\n                  )}\r\n                  <div className=\"d-flex justify-content-center mt-4\">\r\n                    {circles.map((circle, i) => (\r\n                      <div key={i} className={`vote-circle-lg m-1 moving-circle rounded-circle mx-2 shadow${circle.active ? ' move-circle' : ''}`} style={{ backgroundColor: COLORS[circle.color] }}/>\r\n                    ))}\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <p className=\"text-light round-counter-text text-center\">Turns: <b>{gameState.rounds.current}/{gameState.rounds.total}</b></p>\r\n              <div className=\"card darkBg mx-4 shadow\" style={{ width: '280px', maxWidth: '280px', minWidth: '280px' }}>\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex justify-content-center mb-4 mt-2\">\r\n                    <img  className=\"coup-image\" src={`${SERVER_PATH}coup.png`} alt=\"coup\" />\r\n                  </div>\r\n                  {scores.map((score) => (\r\n                    <div key={score.name} className=\"d-flex flex-row p-0 m-0 mr-2\">\r\n                      <div className=\"col-10 p-0 m-0\">\r\n                        <p key={score.name} className=\"text-light score-text nowrap\" >{score.name}</p>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-start col-2 p-0 m-0 ml-2\">\r\n                        <p key={score.name} className=\"text-light score-text\"><b>{score.score.total}</b></p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      ));\r\n    case 2:\r\n      return renderWithNav(renderTable());\r\n    case 3:\r\n      return renderWithNav(renderTable());\r\n    default:\r\n      return <h1>Error</h1>;\r\n  }\r\n};\r\n\r\nexport default Host;\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { restGet, restPut } from './utils/communication';\nimport * as Constants from './constants';\nimport { loadGameData, loadGameType, resetGame } from './actions/gameActions';\nimport Lobby from './components/lobby.jsx';\nimport Join from './components/join.jsx';\nimport Game from './components/game.jsx';\nimport Host from './components/host.jsx';\n\nfunction App() {\n  const gameType = useSelector((state) => state.game.game.type);\n  const code = useSelector((state) => state.game.game.code);\n  const isStarted = useSelector((state) => state.game.state.isStarted);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    restGet(`${Constants.SERVER_PATH}api/games`).then((result) => {\n      if (result.game) {\n        dispatch(loadGameData(result));\n      } else {\n        dispatch(resetGame());\n      }\n    }).catch((error) => {\n      console.log(`Error: ${error.message}`);\n    });\n  }, [dispatch]);\n\n  const hostClicked = () => {\n    restPut(`${Constants.SERVER_PATH}api/games`).then((result) => {\n      if (result.game) {\n        dispatch(loadGameData(result));\n      } else {\n        dispatch(resetGame());\n      }\n    }).catch((error) => {\n      console.log(`Error: ${error.message}`);\n    });\n  };\n\n  const joinClicked = () => {\n    dispatch(loadGameType('player'));\n  };\n\n  if (gameType) {\n    if (gameType === 'host') {\n      if (isStarted) {\n        return <Host />;\n      }\n      return <Lobby />;\n    }\n    if (code) {\n      return <Game />;\n    }\n    return <Join />;\n  }\n\n  return (\n    <div>\n      <p className=\"dixit-title text-light text-center\">DiXit</p>\n      <div className=\"d-flex justify-content-center\">\n        <button onClick={hostClicked} className=\"btn btn-lg btn-outline-light mt-2 mr-2\">Host game</button>\n        <button onClick={joinClicked} className=\"btn btn-lg btn-outline-light mt-2 ml-2\">Join game</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import produce from 'immer';\r\nimport {\r\n  actionLoadGameData, actionLoadGameType, actionResetGame, actionUpdatePlayers, actionUpdateState,\r\n} from '../actions/actionTypes';\r\n\r\nconst defaultState = {\r\n  game: {\r\n    type: '',\r\n    code: '',\r\n    players: [],\r\n  },\r\n  state: {},\r\n};\r\n\r\nconst gameReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case actionLoadGameData:\r\n      return produce(state, (draft) => {\r\n        draft.game = action.payload.game;\r\n        draft.state = action.payload.state;\r\n      });\r\n    case actionLoadGameType:\r\n      return produce(state, (draft) => {\r\n        draft.game.type = action.payload;\r\n      });\r\n    case actionUpdatePlayers:\r\n      return produce(state, (draft) => {\r\n        draft.game.players = action.payload;\r\n      });\r\n    case actionUpdateState:\r\n      return produce(state, (draft) => {\r\n        draft.state = action.payload;\r\n      });\r\n    case actionResetGame:\r\n      return defaultState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gameReducer;\r\n","import { combineReducers } from 'redux';\r\nimport gameReducer from './gameReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  game: gameReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}